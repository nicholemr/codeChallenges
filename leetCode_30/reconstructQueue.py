def reconstructQueue(arr):
    arr.sort()
    empty_indeces = []
    for i, num in enumerate(arr):
        empty_indeces.append(i)

    res = ['_']*len(arr)
    repeated_count = 0
    last_h = None
    for i, p in enumerate(arr):
        h, k = p
        if h == last_h:
            repeated_count += 1
        else:
            repeated_count = 0
        index_in_empty_indeces = k - repeated_count
        index_in_result = empty_indeces[index_in_empty_indeces]
        empty_indeces.pop(index_in_empty_indeces)
        res[index_in_result] = p
        last_h = h
    return res


p = [[7, 0], [4, 4], [7, 1], [5, 0], [6, 1], [5, 2]]
p = [[29, 17], [92, 8], [41, 59], [42, 0], [36, 30], [48, 7], [33, 22], [98, 0], [88, 3], [86, 8], [40, 59], [64, 21], [51, 31], [90, 1], [53, 15], [49, 40], [8, 9], [29, 34], [25, 30], [28, 2], [2, 58], [60, 17], [60, 18], [28, 48], [68, 5], [39, 43], [63, 10], [35, 46], [39, 38], [35, 53], [4, 44], [27, 59], [2, 52], [52, 18], [4, 67], [72, 1], [49, 12], [14, 39], [82, 21], [58, 3], [44, 52], [90, 13], [75, 10], [46, 13], [3, 12], [89, 12], [43, 54], [46, 11], [57, 18], [
    90, 3], [99, 0], [67, 5], [15, 61], [29, 73], [54, 6], [97, 2], [50, 25], [69, 27], [77, 17], [67, 25], [95, 6], [33, 10], [53, 5], [38, 51], [96, 3], [81, 14], [34, 47], [27, 40], [3, 58], [0, 83], [0, 62], [0, 22], [48, 6], [29, 59], [49, 35], [43, 36], [38, 41], [43, 45], [28, 39], [47, 35], [88, 9], [88, 15], [48, 29], [85, 15], [89, 0], [29, 55], [59, 23], [97, 3], [21, 39], [94, 4], [68, 0], [8, 5], [97, 1], [36, 6], [92, 9], [71, 20], [92, 3], [33, 9], [3, 27], [56, 21]]
res = reconstructQueue(p)
